name: linting, testing, building
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-ui-testing:
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}
    timeout-minutes: 15
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      - uses: actions/checkout@v4
      - name: Starting Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci --force

      - name: Build production project
        run: npm run build:prod
        if: always()

      - name: Build Storybook
        run: npm run storybook:build
        if: always()

      - name: Run screenshot testing
        run: npm run test:ui:ci
        if: always()

      - name: Run unit tests
        run: npm run test:unit
        if: always()

      - name: Generate UI test report
        run: npm run test:ui:report
        if: always()

      - name: Move Loki reports
        run: mv .loki reports/
        if: always()

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v2
        if: always()

      - name: Upload test report artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ui-test-report
          path: reports/

      - name: Upload build for GitHub Pages
        uses: actions/upload-pages-artifact@v2
        if: always()
        with:
          path: reports/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        if: always()

  checks:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      - uses: actions/checkout@v4
      - name: Starting Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci --force

      - name: Lint TypeScript
        run: npm run lint:ts
        if: always()

      - name: Lint SCSS
        run: npm run lint:scss
